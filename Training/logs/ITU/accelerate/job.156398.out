Running on desktop22:
Loading anaconda
Sourcing .bashrc
stdin: is not a tty
Activating virtual environment
Logging in to huggingface
Token will not been saved to git credential helper. Pass `add_to_git_credential=True` if you want to set the git credential as well.
Token is valid (permission: write).
Your token has been saved to /home/easc/.cache/huggingface/token
Login successful
Tue Nov 21 21:42:05 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 525.89.02    Driver Version: 525.89.02    CUDA Version: 12.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-PCI...  Off  | 00000000:25:00.0 Off |                    0 |
| N/A   30C    P0    34W / 250W |      0MiB / 40960MiB |     39%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Running script
[nltk_data] Downloading package punkt to /home/easc/nltk_data...
[nltk_data]   Package punkt is already up-to-date!
/home/easc/.conda/envs/env_easc/lib/python3.9/site-packages/pyarrow/pandas_compat.py:373: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if _pandas_api.is_sparse(col):
You are using the default legacy behaviour of the <class 'transformers.models.t5.tokenization_t5.T5Tokenizer'>. If you see this, DO NOT PANIC! This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=True`. This should only be set if you understand what it means, and thouroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565
start

          Running main.py with the following parameters: 
          max_input_length: 1500 
          max_target_length: 1024 
          learning_rate: 5e-05
          gradient_accumulation_steps: 4
          batch_size: 2 
          num_epochs: 2 
          saves: 10
          model_checkpoint: danish-summarisation/DanSumT5-base
          data_source: 2326_Summaries.csv
          hub_model_id: emilstabil/DanSumT5-baseV_12979
          gradient_checkpointing: NO
    
4.32.1
GPU memory occupied: 590 MB.
tokenized_datasets
Map:   0%|          | 0/1860 [00:00<?, ? examples/s]Map:  54%|█████▍    | 1000/1860 [00:05<00:04, 191.73 examples/s]Map: 100%|██████████| 1860/1860 [00:09<00:00, 190.97 examples/s]                                                                Map:   0%|          | 0/233 [00:00<?, ? examples/s]Map: 100%|██████████| 233/233 [00:01<00:00, 193.83 examples/s]                                                              Map:   0%|          | 0/233 [00:00<?, ? examples/s]Map: 100%|██████████| 233/233 [00:01<00:00, 191.73 examples/s]                                                              Detected kernel version 3.10.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
model
train_dataloader
eval_dataloader
optimizer
accelerator
prepare
get_scheduler
  0%|          | 0/9300 [00:00<?, ?it/s]  0%|          | 1/9300 [00:06<15:45:10,  6.10s/it]  0%|          | 2/9300 [00:06<6:56:03,  2.68s/it]   0%|          | 3/9300 [00:06<4:07:36,  1.60s/it]  0%|          | 4/9300 [00:07<2:52:05,  1.11s/it]  0%|          | 5/9300 [00:07<2:10:13,  1.19it/s]  0%|          | 6/9300 [00:07<1:43:56,  1.49it/s]  0%|          | 7/9300 [00:08<1:27:05,  1.78it/s]  0%|          | 8/9300 [00:08<1:18:16,  1.98it/s]start training
Traceback (most recent call last):
  File "/home/easc/mainDANSUM_acc.py", line 348, in <module>
    main()
  File "/home/easc/mainDANSUM_acc.py", line 195, in main
    outputs = model(**batch)
  File "/home/easc/.conda/envs/env_easc/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/easc/.conda/envs/env_easc/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/easc/.conda/envs/env_easc/lib/python3.9/site-packages/transformers/models/mt5/modeling_mt5.py", line 1806, in forward
    loss = loss_fct(lm_logits.view(-1, lm_logits.size(-1)), labels.view(-1))
  File "/home/easc/.conda/envs/env_easc/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/easc/.conda/envs/env_easc/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/easc/.conda/envs/env_easc/lib/python3.9/site-packages/torch/nn/modules/loss.py", line 1179, in forward
    return F.cross_entropy(input, target, weight=self.weight,
  File "/home/easc/.conda/envs/env_easc/lib/python3.9/site-packages/torch/nn/functional.py", line 3053, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.91 GiB. GPU 0 has a total capacty of 39.42 GiB of which 7.93 GiB is free. Including non-PyTorch memory, this process has 31.49 GiB memory in use. Of the allocated memory 29.61 GiB is allocated by PyTorch, and 607.74 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
  0%|          | 8/9300 [00:08<2:53:46,  1.12s/it]
Done
